name: Pipeline Earscope Model Build and Push Image

on:
  push:
    branches:
      - main
    tags:
      - "v*" # Trigger pipeline jika ada tag dengan awalan 'v'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Langkah 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Langkah 2: Login ke Docker Hub
      - name: Login to Dockerhub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Langkah 3: Ekstraksi Versi dari Tag Git atau Commit Hash
      - name: Extract Version from Git Tag or Commit Hash
        id: extract_version
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            # Jika ada tag Git, gunakan sebagai versi
            VERSION=${GITHUB_REF#refs/tags/}
          elif [ -n "$GITHUB_REF_NAME" ] && [[ "$GITHUB_REF_NAME" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            # Jika ada tag Git dalam format semantik
            VERSION=$GITHUB_REF_NAME
          else
            # Jika tidak ada tag, gunakan commit hash pendek sebagai fallback
            VERSION=$(echo $GITHUB_SHA | cut -c1-7)
          fi
          echo "Extracted version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV

      # Langkah 4: Debugging Environment Variables (Opsional)
      - name: Debug Environment Variables
        run: env

      # Langkah 5: Build Docker Images dengan Multiple Tags
      - name: Build Docker Images with Multiple Tags
        run: |
          # Build image dengan tag latest
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/earscope-model:latest .
          # Build image dengan tag berdasarkan versi
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/earscope-model:${{ env.version }} .

      # Langkah 6: Push Docker Images
      - name: Push Docker Images
        run: |
          # Push image dengan tag latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/earscope-model:latest
          # Push image dengan tag berdasarkan versi
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/earscope-model:${{ env.version }}