name: Pipeline Earscope Model Build and Push Image

on:
  push:
    branches:
      - main
    tags:
      - "v*" # Trigger pipeline jika ada tag dengan awalan 'v'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Langkah 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Langkah 2: Login ke Docker Hub
      - name: Login to Dockerhub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Langkah 3: Ekstraksi Versi dari Tag Git atau Commit Hash
      - name: Extract Version from Git Tag or Commit Hash
        id: extract_version
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=$(echo $GITHUB_SHA | cut -c1-7)
          fi
          echo "Extracted version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV

      # Langkah 4: Build Docker Image
      - name: Build Docker Image
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/earscope-model:latest .
          fi
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/earscope-model:${{ env.version }} .
          fi

      # Langkah 5: Push Docker Image
      - name: Push Docker Image
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/earscope-model:latest
          fi
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/earscope-model:${{ env.version }}
          fi

      # Langkah 6: Force Update Deployment YAML in GitHub Repo
      - name: Force Update Deployment YAML in GitHub Repo
        run: |
          git config --global user.email "bot@example.com"
          git config --global user.name "GitHub Actions Bot"

          # Clone repo pakai token agar bisa push perubahan
          git clone https://${{ secrets.GH_PA }}@github.com/adrfstwn/argocd-k8s-repo.git repo
          cd repo

          # Update file deployment.yaml untuk memicu ArgoCD sync
          sed -i "s|image: adrfstwn/earscope-model:latest.*|image: adrfstwn/earscope-model:latest # $(date +%s)|" earscope-apps-kustomize/overlays/development/development.yaml

          # Commit & push perubahan
          git add earscope-apps-kustomize/overlays/development/development.yaml
          git commit -m "Trigger ArgoCD sync with latest image update"
          git push
