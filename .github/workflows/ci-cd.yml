name: Flask-Server-EarScope-TA CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy project with Docker
    permissions:
      deployments: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: main
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@v2
        id: deployment
        with:
          token: '${{ github.token }}'
          environment: production

      - name: Set up SSH Key and Deploy on Server
        uses: appleboy/ssh-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: 22
          script: |
            # Setup GitHub Token for authentication
            git config --global url."https://${{ secrets.PERSONAL_GITHUB_TOKEN }}:@github.com".insteadOf "https://github.com"
            
            # Navigate to the project directory
            cd /var/www/flask-server-earscope-TA

            # Pull the latest changes from Git
            echo "Pulling latest changes from Git..."
            git pull origin main

            # Stop containers
            echo "Stopping running containers..."
            docker stop flask-server-earscope-TA

            # Remove containers
            echo "Removing running containers..."
            docker rm flask-server-earscope-TA

            # Remove Image
            echo "Removing Image..."
            docker rmi -t flask-server-earscope-TA:latest

            # Build Image
            echo "Building Image..."
            docker build -t flask-server-earscope-TA:latest .

            # Build and start Docker containers
            echo "Building and starting Docker containers..."
            docker run -d -p 5005:5005/tcp --name flask-server-earscope-TA flask-server-earscope-TA


            # Verify if the deployment is successful by checking if the application responds on port 5005
            echo "Checking if the server is running on port 5005..."
            nc -zv localhost 5005 || { echo "Deployment failed (port 5005 not open)"; exit 1; }

            echo "Deployment successful (server is up on port 5005)"